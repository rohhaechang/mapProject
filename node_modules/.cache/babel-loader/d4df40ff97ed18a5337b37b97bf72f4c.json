{"ast":null,"code":"import _slicedToArray from\"/Users/rohhaechang/map_project2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _taggedTemplateLiteral from\"/Users/rohhaechang/map_project2/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useRef,useEffect,useState,useCallback}from'react';import styled from'styled-components';import{AiOutlineSearch}from'react-icons/ai';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex: 2;\\n\"])));var MapContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: relative;\\n  top: -40px;\\n  z-index: 1;\\n\"])));var SearchContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  position: relative;\\n  top: 1rem;\\n  width: 300px;\\n  height: 40px;\\n  z-index: 2;\\n  margin: 0 auto;\\n\"])));var Input=styled.input(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 260px;\\n  line-height: 40px;\\n  opacity: 0.8;\\n  box-sizing: border-box;\\n\"])));var IconContainer=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  width: 35px;\\n  margin-left: 2.5px;\\n  margin-right: 2.5px;\\n  box-sizing: border-box;\\n  line-height: 40px;\\n\"])));var Mapp=function Mapp(){var _useState=useState({x:37.5757,y:126.9769}),_useState2=_slicedToArray(_useState,2),LatLng=_useState2[0],setLatLng=_useState2[1];var mapElement=useRef(null);// 지도 만들기\nvar initMap=useCallback(function(){var _window=window,naver=_window.naver;if(!mapElement.current||!naver)return null;// 처음 켰을 때 지도 렌더링하는 곳\nvar location=new naver.maps.LatLng(LatLng.x,LatLng.y);var mapOptions={center:location,zoom:17,zoomControl:true,zoomControlOptions:{position:naver.maps.Position.TOP_RIGHT}};var map=new naver.maps.Map(mapElement.current,mapOptions);var marker=new naver.maps.Marker({position:location,map:map});var infoWindow=new naver.maps.InfoWindow({content:'hi',disableAnchor:true});infoWindow.open(map,marker);},[LatLng]);// 검색창 만들기\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),inputValue=_useState4[0],setInputValue=_useState4[1];var onChangeValue=function onChangeValue(e){setInputValue(e.target.value);};/**\n   * 이상한 점: 주소 검색해서 불러온 값의 x, y 값이 바뀌어 있음\n   * 객체의 요소들이 전부 string이기 때문에 타입변환을 해주었음(Number) */function searchAddress(){naver.maps.Service.geocode({query:inputValue},function(status,response){if(status===naver.maps.Service.Status.ERROR){console.log('오류');}var item=response.v2.addresses[0];setLatLng({x:Number(item.y),y:Number(item.x)});});}useEffect(function(){initMap();},[initMap]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(SearchContainer,{children:[/*#__PURE__*/_jsx(Input,{placeholder:\"\\uAC80\\uC0C9\",onChange:onChangeValue,value:inputValue}),/*#__PURE__*/_jsx(IconContainer,{children:/*#__PURE__*/_jsx(AiOutlineSearch,{size:\"20\",color:\"green\",style:{marginBottom:'-5px'},onClick:function onClick(){searchAddress();}})})]}),/*#__PURE__*/_jsx(MapContainer,{children:/*#__PURE__*/_jsx(\"div\",{ref:mapElement,style:{minHeight:'600px'}})})]});};export default Mapp;","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","styled","AiOutlineSearch","Container","div","MapContainer","SearchContainer","Input","input","IconContainer","button","Mapp","x","y","LatLng","setLatLng","mapElement","initMap","window","naver","current","location","maps","mapOptions","center","zoom","zoomControl","zoomControlOptions","position","Position","TOP_RIGHT","map","Map","marker","Marker","infoWindow","InfoWindow","content","disableAnchor","open","inputValue","setInputValue","onChangeValue","e","target","value","searchAddress","Service","geocode","query","status","response","Status","ERROR","console","log","item","v2","addresses","Number","marginBottom","minHeight"],"sources":["/Users/rohhaechang/map_project2/src/Components/Mapp/index.tsx"],"sourcesContent":["import React, {useRef, useEffect, useState, useCallback} from 'react';\nimport styled from 'styled-components';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nconst Container = styled.div`\n  flex: 2;\n`;\n\nconst MapContainer = styled.div`\n  position: relative;\n  top: -40px;\n  z-index: 1;\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  top: 1rem;\n  width: 300px;\n  height: 40px;\n  z-index: 2;\n  margin: 0 auto;\n`;\n\nconst Input = styled.input`\n  width: 260px;\n  line-height: 40px;\n  opacity: 0.8;\n  box-sizing: border-box;\n`;\n\nconst IconContainer = styled.button`\n  width: 35px;\n  margin-left: 2.5px;\n  margin-right: 2.5px;\n  box-sizing: border-box;\n  line-height: 40px;\n`;\n\nconst Mapp = () => {\n  const [LatLng, setLatLng] = useState({\n    x: 37.5757,\n    y: 126.9769\n  })\n  \n  const mapElement = useRef<HTMLInputElement>(null);\n  \n  // 지도 만들기\n  const initMap = useCallback(() => {\n    const { naver } = window;\n    if(!mapElement.current || !naver) return null;\n\n    // 처음 켰을 때 지도 렌더링하는 곳\n    const location = new naver.maps.LatLng(LatLng.x, LatLng.y);\n    const mapOptions: naver.maps.MapOptions = {\n      center: location,\n      zoom: 17,\n      zoomControl: true,\n      zoomControlOptions: {\n        position: naver.maps.Position.TOP_RIGHT,\n      },\n    };\n    const map = new naver.maps.Map(mapElement.current, mapOptions);\n    let marker = new naver.maps.Marker({\n      position: location,\n      map\n    });\n    let infoWindow = new naver.maps.InfoWindow({\n      content: 'hi',\n      disableAnchor: true,\n    })\n    infoWindow.open(map, marker);\n\n\n  }, [LatLng]);\n\n  // 검색창 만들기\n  const [inputValue, setInputValue] = useState('');\n\n  const onChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n  /**\n   * 이상한 점: 주소 검색해서 불러온 값의 x, y 값이 바뀌어 있음\n   * 객체의 요소들이 전부 string이기 때문에 타입변환을 해주었음(Number) */ \n  function searchAddress() {\n    naver.maps.Service.geocode({\n      query: inputValue\n    }, function(status, response) {\n      if(status === naver.maps.Service.Status.ERROR) {\n        console.log('오류');\n      }\n      let item = response.v2.addresses[0];\n      setLatLng({\n        x: Number(item.y),\n        y: Number(item.x)\n      })\n    })\n  }\n  \n  useEffect(() => {\n    initMap();\n  }, [initMap]);\n  return (\n    <Container>\n      <SearchContainer>\n        <Input placeholder=\"검색\" onChange={onChangeValue} value={inputValue}/>\n        <IconContainer>\n          <AiOutlineSearch size='20' color='green' style={{marginBottom: '-5px'}} onClick={() => {\n            searchAddress()\n            }}/>\n        </IconContainer>\n      </SearchContainer>\n      <MapContainer>\n        <div ref={mapElement} style={{minHeight: '600px'}}></div>\n      </MapContainer>\n    </Container>\n  );\n}\n\nexport default Mapp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}